import boto3
import requests
from botocore.exceptions import BotoCoreError

ssm = boto3.client("ssm")


def scan_file(server_url, api_key, bucket, key, destination_bucket, external_tools):
    data = {
        "bucket": bucket,
        "key": key,
        "destination_bucket": destination_bucket,
        "external_tools": external_tools,
    }
    print(f"Scanning file: {data}")
    headers = {"X-API-KEY": api_key}
    response = requests.post(
        f"http://{server_url}/api/s3-scan",
        json=data,
        headers=headers,
    )
    try:
        response.raise_for_status()
    except requests.RequestException as e:
        print(f"Error scanning file: {e.response.text}")
        raise e
    print(f"Scan response: {response.json()}")

    return response.json()


def lambda_handler(event, _):
    print(f"Triggered by event: {event}")
    bucket = event["Records"][0]["s3"]["bucket"]["name"]
    key = event["Records"][0]["s3"]["object"]["key"]

    try:
        server_url = ssm.get_parameter(
            Name="MALWARE_DETECTION_SERVER_URL", WithDecryption=True
        )["Parameter"]["Value"]
        api_key = ssm.get_parameter(
            Name="MALWARE_DETECTION_SERVER_API_KEY", WithDecryption=True
        )["Parameter"]["Value"]
        destination_bucket = ssm.get_parameter(
            Name="MALWARE_DETECTION_DESTINATION_BUCKET", WithDecryption=True
        )["Parameter"]["Value"]
        external_tools = (
            True
            if ssm.get_parameter(
                Name="MALWARE_DETECTION_EXTERNAL_TOOLS", WithDecryption=True
            )["Parameter"]["Value"]
            == "True"
            else False
        )

    except BotoCoreError as e:
        print(f"Error retrieving parameters from SSM: {e}")
        return

    file_scan_response = scan_file(
        server_url,
        api_key,
        bucket,
        key,
        destination_bucket,
        external_tools,
    )

    return file_scan_response
